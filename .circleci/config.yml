version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/mysql:latest
        environment:
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_DATABASE: customer_support_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle
      - run:
          name: Print the Current Time
          command: date
     # Store bundle cache
      - type: cache-save
        name: Store bundle cache
        key: rails-demo-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - type: cache-restore
        name: Restore yarn cache
        key: rails-demo-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn Install
          command: yarn install

      # Store yarn / webpacker cache
      - type: cache-save
        name: Store yarn cache
        key: rails-demo-yarn-{{ checksum "yarn.lock" }}
        paths:
          - ~/.yarn-cache

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)


      # Save test results for timing analysis
      - store_test_results:
          path: test_results
